version: "3.7"

services:

  node:
    build:
      context: ./
      dockerfile: Dockerfile
      target: dev
    ports:
      - "80:3000"
    volumes:
      - ./:/app
      - /app/node_modules
    restart: "unless-stopped"
    links:
      - db

  db:
    image: postgis/postgis:16-3.4
    restart: always
    platform: linux/amd64
    environment:
      POSTGRES_DB: ${POSTGRES_DATABASE:-delivery}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres", "-d", "delivery" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data

  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - mongodata:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-root}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}

  adminer:
    build: ./docker/adminer
    restart: always
    ports:
      - 8080:8080

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER:-root}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD:-password}
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: "27017"
volumes:
  data:
    driver: local
  pgdata:
    driver: local
  mongodata:
    driver: local
